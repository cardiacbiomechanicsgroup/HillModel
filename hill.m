function [P,H,Lse,Lce] = hill(L,t)% Function hill accepts length & time inputs L(n), t(n) and computes%        following outputs assuming tetanizing impulse starts at first time point:%	  P(n) - force%	  H(n) - heat%	  Lse(n) - series elastic element length%	  Lce(n) - contractile element length% Inputs and outputs are column vectors that must all have same length n.% Establish constants (Hill 1938 p.174, mean data at 0¡C: a = 399*0.098, b = 0.331)% Note that because Hill reports force with units of force/unit area and lengths in%	unitless fractions of muscle length, force and heat all have units of force/area.a = (380*.098);			% units mN/mm2b = 0.325;				% units lengths/secP0 = a/0.257;			% units mN/mm2vm = P0*b/a;			% units lengths/secalpha = P0/0.1;			% units mN/mm2Lse0 = 0.3;			% assume series elastic element is 30% of initial lengthk = a/25;				% set arbitrary baseline heat rate% Initialize arraysLse = [repmat(Lse0,length(t),1)];	Lce = [repmat((1-Lse0),length(t),1)];H = [repmat(0,length(t),1)];P = [repmat(0,length(t),1)];% General solver for prescribed length input to Hill modelfor j = 1:(length(t)-1)	Lse(j) = Lse0+P(j)/alpha; Lce(j) = L(j)-Lse(j);	dt = (t(j+1)-t(j));	dL = (L(j+1)-L(j));	dP = alpha*((dL/dt) + b*((P0-P(j))/(a+P(j))))*dt;	P(j+1) = P(j) + dP;	H(j+1) = H(j) + (k + a*b*((P0-P(j))/(a+P(j))))*dt;endLse(j+1) = Lse0+P(j+1)/alpha; Lce(j+1) = L(j+1)-Lse(j+1);% Add some noise if desired for more realistic outputH = H + (k/10)*(randn(length(t),1));P = P + (P0/100)*(randn(length(t),1));